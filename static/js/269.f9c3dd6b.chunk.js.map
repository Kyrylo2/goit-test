{"version":3,"file":"static/js/269.f9c3dd6b.chunk.js","mappings":"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","sources":["redux/selectors.js","components/TweetsList/TweetsList.styled.js","components/TweetsListItem/TweetsListItem.styled.js","components/Button/Button.styled.js","components/Button/Button.jsx","services/api.js","components/TweetsListItem/TweetsListItem.jsx","components/TweetsList/TweetsList.jsx","pages/Tweets/Tweets.styled.js","pages/Tweets/Tweets.jsx","hooks/useTweets.jsx","services/constants.js"],"sourcesContent":["export const getFollowingUsers = state => state.followedUsers.items;\n","import styled from 'styled-components';\n\nexport const TweetsListStyled = styled.ul`\n  display: grid;\n\n  @media (min-width: 480px) {\n    grid-template-columns: repeat(1, 1fr);\n    gap: 10px;\n  }\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n    max-width: 768px;\n    width: 100%;\n    gap: 10px;\n  }\n  @media (min-width: 1200px) {\n    grid-template-columns: repeat(3, 1fr);\n    max-width: 1200px;\n    width: 100%;\n    gap: 25px;\n  }\n`;\n\nexport const ImageCatStyles = styled.img`\n  height: 30%;\n`;\n","import styled from 'styled-components';\n\nconst cardBackground = `\n  background: linear-gradient(114.99deg, #471CA9 -0.99%, #5736A3 54.28%, #4B2A99 78.99%);\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const UserCard = styled.li`\n  position: relative;\n  padding: 20px;\n  width: 380px;\n  height: 460px;\n  ${cardBackground}\n  transition: transform 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275),\n    box-shadow 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n\n  &:hover {\n    transform: scale(1.02);\n    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const UserInfoText = styled.p`\n  font-family: 'Montserrat';\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #ebd8ff;\n`;\n\nconst avatarStyles = `\n  width: 80px;\n  height: 80px;\n  background: rgb(235, 216, 255);\n  box-shadow: rgba(0, 0, 0, 0.06) 0px 4.39163px 4.39163px,\n    rgb(174, 123, 227) 0px -2.19582px 4.39163px inset,\n    rgb(251, 248, 255) 0px 4.39163px 3.29372px inset;\n  clip-path: circle(40px at center);\n  border-radius: 50%;\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  ${avatarStyles}\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  transform: translate(-50%, -50%);\n  left: 50%;\n  top: 50%;\n  width: 62px;\n  height: 62px;\n  border-radius: 50%;\n`;\n\nconst centerLineStyles = `\n  width: 380px;\n  height: 8px;\n  background: rgb(235, 216, 255);\n  box-shadow: rgba(0, 0, 0, 0.06) 0px 3.43693px 3.43693px,\n    rgb(174, 123, 227) 0px -1.71846px 3.43693px inset,\n    rgb(251, 248, 255) 0px 3.43693px 2.5777px inset;\n  z-index: 0;\n`;\n\nexport const CenterLine = styled.div`\n  position: absolute;\n  transform: translate(0, -50%);\n  left: 0;\n  top: 50%;\n  ${centerLineStyles}\n`;\n\nexport const UserInfoWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin-bottom: 26px;\n  width: max-content;\n`;\n\nexport const UserInfoAndButtonContainer = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  width: 208px;\n  bottom: 36px;\n  left: 50%;\n  transform: translateX(-50%);\n  align-items: center;\n`;\n\nexport const BackImage = styled.img`\n  position: absolute;\n  top: 28px;\n  left: 36px;\n`;\n","import Button from '@mui/joy/Button';\nimport styled from 'styled-components';\n\nexport const StyledButton = styled(Button)`\n  && {\n    background-color: ${props => (props.following ? '#5CD3A8' : '#EBD8FF')};\n    color: #373737;\n    transition: background-color 250ms linear;\n    min-width: 196px;\n\n    :hover {\n      background-color: ${props => (props.following ? '#EBD8FF' : '#5CD3A8')};\n      color: ${props => (props.following ? '#373737' : '#373737')};\n    }\n  }\n`;\n","import React from 'react';\nimport { StyledButton } from './Button.styled';\n\nconst ButtonStyled = ({\n  selected = false,\n  loading = false,\n  type = 'button',\n  following = false,\n  children,\n  onClick,\n  ...otherProps\n}) => {\n  const handleClick = event => {\n    if (!loading && onClick) {\n      onClick(event);\n    }\n  };\n\n  console.log('Button clicked', following);\n\n  return (\n    <StyledButton\n      type={type}\n      loading={loading}\n      loadingPosition=\"start\"\n      variant=\"solid\"\n      disabled={loading}\n      following={following}\n      onClick={handleClick}\n      {...otherProps}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default ButtonStyled;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://6491ea672f2c7ee6c2c92653.mockapi.io',\n});\n\nconst handleRequest = async requestConfig => {\n  try {\n    const response = await requestConfig;\n    return response.data;\n  } catch (error) {\n    console.error('Request error:', error);\n    throw new Error(error.message);\n  }\n};\n\nconst updateUserFollowers = async (user, followersDelta) => {\n  const requestConfig = api.put(`/users/${user.id}`, {\n    followers: +user.followers + followersDelta,\n  });\n  return handleRequest(requestConfig);\n};\n\nexport const getUsers = async () => {\n  const requestConfig = api.get('/users');\n  return handleRequest(requestConfig);\n};\n\nexport const increaseFollowers = async user => {\n  return updateUserFollowers(user, 1);\n};\n\nexport const decreaseFollowers = async user => {\n  return updateUserFollowers(user, -1);\n};\n","import React, { memo, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport {\n  addFollowingUser,\n  deleteFollowingUser,\n} from 'redux/followedUsersSlice';\nimport {\n  Avatar,\n  AvatarWrapper,\n  BackImage,\n  CenterLine,\n  UserCard,\n  UserInfoAndButtonContainer,\n  UserInfoWrapper,\n} from './TweetsListItem.styled';\nimport ButtonStyled from 'components/Button/Button';\nimport { decreaseFollowers, increaseFollowers } from 'services/api';\n\nconst TweetsListItem = memo(({ user, following }) => {\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n\n  const { mutateAsync, isLoading } = useMutation(follow => {\n    const followAction = follow ? increaseFollowers : decreaseFollowers;\n    return followAction(user);\n  });\n\n  const handleFollowAction = useCallback(\n    async follow => {\n      try {\n        await mutateAsync(follow);\n        if (follow) {\n          dispatch(addFollowingUser(user));\n        } else {\n          dispatch(deleteFollowingUser(user.id));\n        }\n        queryClient.invalidateQueries(['users']);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    [dispatch, queryClient, user, mutateAsync]\n  );\n\n  const handleFollowClick = useCallback(() => {\n    handleFollowAction(true);\n  }, [handleFollowAction]);\n\n  const handleUnfollowClick = useCallback(() => {\n    handleFollowAction(false);\n  }, [handleFollowAction]);\n\n  const buttonLabel = isLoading\n    ? 'LOADING'\n    : following\n    ? 'FOLLOWING'\n    : 'FOLLOW';\n  const handleClick = following ? handleUnfollowClick : handleFollowClick;\n\n  return (\n    <UserCard>\n      <img src={require('../../assets/Logo.png')} alt=\"logo\" />\n      <BackImage\n        src={require('../../assets/images/TweetCardImages/mainPicture.png')}\n        alt=\"\"\n      />\n      <AvatarWrapper>\n        <Avatar src={user.avatar} alt=\"user avatar\" />\n      </AvatarWrapper>\n      <CenterLine />\n      <UserInfoAndButtonContainer>\n        <UserInfoWrapper>\n          <p>{user.tweets.toLocaleString('en-GB')} TWEETS</p>\n          <p>{user.followers.toLocaleString('en-GB')} FOLLOWERS</p>\n        </UserInfoWrapper>\n        <ButtonStyled\n          type=\"button\"\n          onClick={handleClick}\n          following={following}\n          loading={isLoading}\n          disabled={isLoading}\n        >\n          {buttonLabel}\n        </ButtonStyled>\n      </UserInfoAndButtonContainer>\n    </UserCard>\n  );\n});\n\nexport default TweetsListItem;\n","import { useSelector } from 'react-redux';\nimport { getFollowingUsers } from 'redux/selectors';\nimport { ImageCatStyles, TweetsListStyled } from './TweetsList.styled';\nimport TweetsListItem from 'components/TweetsListItem/TweetsListItem';\n\nexport const TweetsList = ({ users, filterSelector }) => {\n  console.log('visibleUsers:', users);\n  console.log('filteredSelector:', filterSelector); // data: 'all', 'followed', 'not followed'\n\n  const followedUsers = useSelector(getFollowingUsers);\n  console.log('followedUsers:', followedUsers);\n\n  const isFollowing = user => {\n    const res = followedUsers?.some(item => item.id === user.id);\n    console.log('isFollowing:', res);\n    return res;\n  };\n\n  const filteredUsers = users.filter(user => {\n    if (filterSelector === 'all') {\n      return true; // Показувати всіх користувачів\n    } else if (filterSelector === 'followed') {\n      return isFollowing(user); // Показувати тільки відслідковувані користувачі\n    } else if (filterSelector === 'not followed') {\n      return !isFollowing(user); // Показувати тільки не відслідковувані користувачі\n    }\n    return false;\n  });\n\n  return filteredUsers?.length > 0 ? (\n    <TweetsListStyled>\n      {filteredUsers.map(user => (\n        <TweetsListItem\n          user={user}\n          key={user.id}\n          following={isFollowing(user)}\n        />\n      ))}\n    </TweetsListStyled>\n  ) : (\n    <>\n      <div>No {filterSelector} users</div>\n      <ImageCatStyles\n        src={require('../../assets/images/NoDataCatImage/sad-cat-carnimee-transparent.png')}\n        alt=\"cat\"\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BreadcrumbsAndRadioButtonFilterContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n","import { TweetsList } from 'components/TweetsList/TweetsList';\n\nimport React, { useState, useEffect } from 'react';\nimport { USERS_PER_PAGE } from 'services/constants';\nimport { useNavigate } from 'react-router-dom';\n\nimport Spinner from 'components/Spinner/Spinner';\n\nimport { useTweets } from 'hooks/useTweets';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport { purple } from '@mui/material/colors';\nimport Select from '@mui/material/Select';\n\nimport Button from '@mui/joy/Button';\nimport { BreadcrumbsAndRadioButtonFilterContainer } from './Tweets.styled';\n\nconst Tweets = () => {\n  const [page, setPage] = useState(1);\n  const [visibleUsers, setVisibleUsers] = useState([]);\n  const [filterSelector, setFilterSelector] = useState('all');\n\n  const navigate = useNavigate();\n\n  const { data, isError, isLoading, fetchStatus, status } = useTweets();\n\n  useEffect(() => {\n    if (status === 'success' && fetchStatus === 'idle')\n      setVisibleUsers(data.slice(0, page * USERS_PER_PAGE));\n  }, [page, data, fetchStatus, status]);\n\n  const totalPages = () => Math.ceil(data.length / USERS_PER_PAGE);\n\n  const onLoadMoreButton = () => {\n    if (page >= totalPages) {\n      return;\n    }\n\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const onBackButtonClick = () => {\n    navigate('/', { replace: true });\n  };\n\n  const handleFilterSelectorChange = event => {\n    setFilterSelector(event.target.value);\n  };\n\n  console.log('----------------', visibleUsers, visibleUsers.length);\n\n  if (isLoading) return <Spinner />;\n  if (isError) return <div>Error</div>;\n\n  return (\n    <>\n      <BreadcrumbsAndRadioButtonFilterContainer>\n        <Button\n          variant=\"outlined\"\n          onClick={onBackButtonClick}\n          sx={{\n            m: 1,\n            minWidth: 120,\n            color: purple[50],\n            borderColor: purple[200],\n            borderWidth: '1px',\n            borderRadius: '4px',\n            fontSize: '14px',\n            fontWeight: '400',\n            '&.Mui-focused': {\n              color: purple[800],\n            },\n            '&:hover': {\n              borderColor: purple[600],\n              borderWidth: '1px',\n              backgroundColor: purple[600],\n              color: purple[50],\n            },\n          }}\n        >\n          Go back\n        </Button>\n\n        <FormControl\n          sx={{\n            m: 1,\n            minWidth: 120,\n            color: purple[50],\n            '&.Mui-focused': {\n              color: purple[800],\n            },\n            borderColor: purple[200],\n            borderWidth: '1px',\n            borderRadius: '4px',\n\n            '&:hover > #filter-radio-button-label': {\n              color: purple[600],\n            },\n          }}\n        >\n          <InputLabel\n            id=\"filter-radio-button-label\"\n            sx={{\n              color: purple[200],\n              '&.Mui-focused': { color: purple[600] },\n              '&:hover': {\n                color: purple[600],\n              },\n            }}\n          >\n            Filter\n          </InputLabel>\n          <Select\n            labelId=\"filter-radio-button-label\"\n            id=\"filter-radio-button\"\n            value={filterSelector}\n            label=\"Filter\"\n            onChange={handleFilterSelectorChange}\n            sx={{\n              color: purple[50],\n              fontWeight: '400',\n              fontSize: '14px',\n              '.MuiOutlinedInput-notchedOutline': {\n                borderColor: purple[200],\n                borderWidth: '1px',\n              },\n              '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                borderColor: purple[600],\n                borderWidth: '1px',\n              },\n              '&:hover .MuiOutlinedInput-notchedOutline': {\n                borderColor: purple[600],\n                borderWidth: '1px',\n              },\n              '.MuiSvgIcon-root ': {\n                fill: 'white !important',\n              },\n            }}\n            autoWidth\n          >\n            <MenuItem value={'all'}>All</MenuItem>\n            <MenuItem value={'followed'}>Followed</MenuItem>\n            <MenuItem value={'not followed'}>Not followed</MenuItem>\n          </Select>\n        </FormControl>\n      </BreadcrumbsAndRadioButtonFilterContainer>\n      {visibleUsers?.length > 0 ? (\n        <TweetsList users={visibleUsers} filterSelector={filterSelector} />\n      ) : (\n        <>\n          <div>No Photo</div>\n          <img\n            src={require('../../assets/images/NoDataCatImage/sad-cat-carnimee-transparent.png')}\n            alt=\"cat\"\n          />\n        </>\n      )}\n      <Button\n        variant=\"outlined\"\n        onClick={onLoadMoreButton}\n        sx={{\n          m: 1,\n          minWidth: 120,\n          color: purple[50],\n          borderColor: purple[200],\n          borderWidth: '1px',\n          borderRadius: '4px',\n          fontSize: '14px',\n          fontWeight: '400',\n\n          '&.Mui-focused': {\n            color: purple[800],\n          },\n          '&:hover': {\n            borderColor: purple[600],\n            borderWidth: '1px',\n            backgroundColor: purple[600],\n            color: purple[50],\n          },\n        }}\n      >\n        Load more\n      </Button>\n    </>\n  );\n};\n\nexport default Tweets;\n","import { useQuery } from '@tanstack/react-query';\nimport { toast } from 'react-toastify';\nimport { getUsers } from 'services/api';\n\nexport function useTweets() {\n  return useQuery({\n    queryKey: ['users'],\n    queryFn: () => {\n      const res = toast.promise(getUsers, {\n        pending: 'Loading...',\n\n        success: 'Success',\n      });\n\n      return res;\n    },\n    staleTime: 1000 * 60 * 5,\n  });\n}\n","export const USERS_PER_PAGE = 3;\n\nexport const errorMessages = {\n  fetchUsers: 'Failed to fetch users.',\n  increaseFollowers: 'Failed to increase followers.',\n  decreaseFollowers: 'Failed to decrease followers.',\n};\n\nexport const createMessage = (action, successMessage, errorMessage) => {\n  const pending = `${action}...`;\n  const success = `${successMessage} successfully!`;\n  const error = errorMessage;\n  return { pending, success, error };\n};\n"],"names":["getFollowingUsers","state","followedUsers","items","TweetsListStyled","styled","ImageCatStyles","UserCard","AvatarWrapper","Avatar","CenterLine","UserInfoWrapper","UserInfoAndButtonContainer","BackImage","StyledButton","Button","props","following","selected","loading","type","children","onClick","otherProps","console","log","loadingPosition","variant","disabled","event","api","axios","baseURL","handleRequest","requestConfig","response","data","error","Error","message","updateUserFollowers","user","followersDelta","put","id","followers","getUsers","get","increaseFollowers","decreaseFollowers","TweetsListItem","memo","dispatch","useDispatch","queryClient","useQueryClient","useMutation","follow","mutateAsync","isLoading","handleFollowAction","useCallback","addFollowingUser","deleteFollowingUser","invalidateQueries","handleFollowClick","handleUnfollowClick","buttonLabel","handleClick","src","require","alt","avatar","tweets","toLocaleString","TweetsList","users","filterSelector","useSelector","isFollowing","res","some","item","filteredUsers","filter","length","map","BreadcrumbsAndRadioButtonFilterContainer","useState","page","setPage","visibleUsers","setVisibleUsers","setFilterSelector","navigate","useNavigate","useQuery","queryKey","queryFn","toast","pending","success","staleTime","isError","fetchStatus","status","useEffect","slice","totalPages","Math","ceil","Spinner","replace","sx","m","minWidth","color","purple","borderColor","borderWidth","borderRadius","fontSize","fontWeight","backgroundColor","FormControl","InputLabel","Select","labelId","value","label","onChange","target","fill","autoWidth","MenuItem","prevPage"],"sourceRoot":""}