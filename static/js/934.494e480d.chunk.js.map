{"version":3,"file":"static/js/934.494e480d.chunk.js","mappings":"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","sources":["services/api.js","pages/Tweets/Tweets.styled.js","redux/selectors.js","components/TweetsList/TweetsList.styled.js","components/TweetsListItem/TweetsListItem.styled.js","components/Button/Button.jsx","components/TweetsListItem/TweetsListItem.jsx","components/TweetsList/TweetsList.jsx","pages/Tweets/Tweets.jsx","hooks/useTweets.jsx","services/constants.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://6491ea672f2c7ee6c2c92653.mockapi.io',\n});\n\nconst handleRequest = async requestConfig => {\n  try {\n    const response = await requestConfig;\n    return response.data;\n  } catch (error) {\n    console.error('Request error:', error);\n    throw new Error(error.message);\n  }\n};\n\nconst updateUserFollowers = async (user, followersDelta) => {\n  const requestConfig = api.put(`/users/${user.id}`, {\n    followers: +user.followers + followersDelta,\n  });\n  return handleRequest(requestConfig);\n};\n\nexport const getUsers = async () => {\n  const requestConfig = api.get('/users');\n  return handleRequest(requestConfig);\n};\n\nexport const increaseFollowers = async user => {\n  return updateUserFollowers(user, 1);\n};\n\nexport const decreaseFollowers = async user => {\n  return updateUserFollowers(user, -1);\n};\n","import styled from 'styled-components';\n\nexport const BreadcrumbsAndRadioButtonFilterContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n","export const getFollowingUsers = state => state.followedUsers.items;\n","import styled from 'styled-components';\n\nexport const TweetsListStyled = styled.ul`\n  display: grid;\n  gap: 25px;\n\n  @media (min-width: 480px) {\n    grid-template-columns: repeat(1, 1fr);\n    gap: 10px;\n  }\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n    max-width: 768px;\n    width: 100%;\n    gap: 10px;\n  }\n  @media (min-width: 1200px) {\n    grid-template-columns: repeat(3, 1fr);\n    max-width: 1200px;\n    width: 100%;\n    gap: 25px;\n  }\n`;\n\nexport const ImageCatStyles = styled.img`\n  height: 30%;\n`;\n","import styled from 'styled-components';\n\nconst cardBackground = `\n  background: linear-gradient(114.99deg, #471CA9 -0.99%, #5736A3 54.28%, #4B2A99 78.99%);\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const UserCard = styled.li`\n  position: relative;\n  padding: 20px;\n  width: 380px;\n  height: 460px;\n  ${cardBackground}\n  transition: transform 0.2s linear,\n    box-shadow 0.2s linear;\n\n  &:hover {\n    transform: scale(1.02);\n    box-shadow: -1px 15px 30px 7px rgba(191, 130, 191, 0.2);\n  }\n`;\n\nexport const UserInfoText = styled.p`\n  font-family: 'Montserrat';\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #ebd8ff;\n`;\n\nconst avatarStyles = `\n  width: 80px;\n  height: 80px;\n  background: rgb(235, 216, 255);\n  box-shadow: rgba(0, 0, 0, 0.06) 0px 4.39163px 4.39163px,\n    rgb(174, 123, 227) 0px -2.19582px 4.39163px inset,\n    rgb(251, 248, 255) 0px 4.39163px 3.29372px inset;\n  clip-path: circle(40px at center);\n  border-radius: 50%;\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  ${avatarStyles}\n  z-index: 1;\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  transform: translate(-50%, -50%);\n  left: 50%;\n  top: 50%;\n  width: 62px;\n  height: 62px;\n  border-radius: 50%;\n`;\n\nconst centerLineStyles = `\n  width: 380px;\n  height: 8px;\n  background: rgb(235, 216, 255);\n  box-shadow: rgba(0, 0, 0, 0.06) 0px 3.43693px 3.43693px,\n    rgb(174, 123, 227) 0px -1.71846px 3.43693px inset,\n    rgb(251, 248, 255) 0px 3.43693px 2.5777px inset;\n  z-index: 0;\n`;\n\nexport const CenterLine = styled.div`\n  position: absolute;\n  transform: translate(0, -50%);\n  left: 0;\n  top: 50%;\n  ${centerLineStyles}\n`;\n\nexport const UserInfoWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin-bottom: 26px;\n  width: max-content;\n`;\n\nexport const UserInfoAndButtonContainer = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  width: 208px;\n  bottom: 36px;\n  left: 50%;\n  transform: translateX(-50%);\n  align-items: center;\n`;\n\nexport const BackImage = styled.img`\n  position: absolute;\n  top: 28px;\n  left: 36px;\n`;\n","import React from 'react';\nimport { Button } from '@mui/joy';\n\nconst ButtonStyled = ({\n  selected = false,\n  loading = false,\n  type = 'button',\n  following = false,\n  children,\n  onClick,\n  ...otherProps\n}) => {\n  const handleClick = event => {\n    if (!loading && onClick) {\n      onClick(event);\n    }\n  };\n\n  return (\n    <Button\n      type={type}\n      loading={loading}\n      loadingPosition=\"start\"\n      variant=\"solid\"\n      disabled={loading}\n      sx={{\n        backgroundColor: following ? '#5CD3A8' : '#EBD8FF',\n        color: '#373737',\n        transition: 'backgroundColor 250ms linear, boxShadow 250ms linear',\n        minWidth: '196px',\n        ':hover': {\n          backgroundColor: following ? '#EBD8FF' : '#5CD3A8',\n          color: '#373737',\n          boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\n        },\n      }}\n      onClick={handleClick}\n      {...otherProps}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default ButtonStyled;\n","import React, { memo, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport {\n  addFollowingUser,\n  deleteFollowingUser,\n} from 'redux/followedUsersSlice';\nimport {\n  Avatar,\n  AvatarWrapper,\n  BackImage,\n  CenterLine,\n  UserCard,\n  UserInfoAndButtonContainer,\n  UserInfoWrapper,\n} from './TweetsListItem.styled';\nimport ButtonStyled from 'components/Button/Button';\nimport { decreaseFollowers, increaseFollowers } from 'services/api';\n\nconst TweetsListItem = memo(({ user, following }) => {\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n\n  const { mutateAsync, isLoading } = useMutation(follow => {\n    const followAction = follow ? increaseFollowers : decreaseFollowers;\n    return followAction(user);\n  });\n\n  const handleFollowAction = useCallback(\n    async follow => {\n      try {\n        await mutateAsync(follow);\n        if (follow) {\n          dispatch(addFollowingUser(user));\n        } else {\n          dispatch(deleteFollowingUser(user.id));\n        }\n        queryClient.invalidateQueries(['users']);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    [dispatch, queryClient, user, mutateAsync]\n  );\n\n  const handleFollowClick = useCallback(() => {\n    handleFollowAction(true);\n  }, [handleFollowAction]);\n\n  const handleUnfollowClick = useCallback(() => {\n    handleFollowAction(false);\n  }, [handleFollowAction]);\n\n  const buttonLabel = isLoading\n    ? 'LOADING'\n    : following\n    ? 'FOLLOWING'\n    : 'FOLLOW';\n  const handleClick = following ? handleUnfollowClick : handleFollowClick;\n\n  return (\n    <UserCard>\n      <img src={require('../../assets/Logo.png')} alt=\"logo\" />\n      <BackImage\n        src={require('../../assets/images/TweetCardImages/mainPicture.png')}\n        alt=\"\"\n      />\n      <AvatarWrapper>\n        <Avatar src={user.avatar} alt=\"user avatar\" />\n      </AvatarWrapper>\n      <CenterLine />\n      <UserInfoAndButtonContainer>\n        <UserInfoWrapper>\n          <p>{user.tweets.toLocaleString('en-GB')} TWEETS</p>\n          <p>{user.followers.toLocaleString('en-GB')} FOLLOWERS</p>\n        </UserInfoWrapper>\n        <ButtonStyled\n          type=\"button\"\n          onClick={handleClick}\n          following={following}\n          loading={isLoading}\n          disabled={isLoading}\n        >\n          {buttonLabel}\n        </ButtonStyled>\n      </UserInfoAndButtonContainer>\n    </UserCard>\n  );\n});\n\nexport default TweetsListItem;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getFollowingUsers } from 'redux/selectors';\nimport { ImageCatStyles, TweetsListStyled } from './TweetsList.styled';\nimport TweetsListItem from 'components/TweetsListItem/TweetsListItem';\n\nexport const TweetsList = ({\n  allUsers,\n  visibleUsersProps,\n  filterSelector,\n  handleLoadMoreButtonDisabled,\n}) => {\n  const [visibleUsers, setVisibleUsers] = useState(visibleUsersProps);\n\n  const followedUsers = useSelector(getFollowingUsers);\n\n  // Compare all users with followed users\n  const compareUsers = (allUsers, followUsers) => {\n    const followSet = new Set(followUsers.map(user => user.id));\n    const followed = [];\n    const notFollowed = [];\n\n    for (const user of allUsers) {\n      if (followSet.has(user.id)) {\n        followed.push(user);\n      } else {\n        notFollowed.push(user);\n      }\n    }\n\n    return {\n      followed,\n      notFollowed,\n    };\n  };\n\n  // Check if a user is being followed\n  const isFollowing = useCallback(\n    user => {\n      return followedUsers?.some(item => item.id === user.id);\n    },\n    [followedUsers]\n  );\n\n  // Filter visible users based on the selected filter\n  useEffect(() => {\n    const filteredUsers = visibleUsersProps.filter(user => {\n      switch (filterSelector) {\n        case 'all':\n          return true; // Show all users\n        case 'followed':\n          return isFollowing(user); // Show only followed users\n        case 'not followed':\n          return !isFollowing(user); // Show only not followed users\n        default:\n          return false;\n      }\n    });\n\n    setVisibleUsers(filteredUsers);\n  }, [filterSelector, isFollowing, visibleUsersProps]);\n\n  // Update the load more button disabled state based on all users and followed users\n  useEffect(() => {\n    if (visibleUsers) {\n      handleLoadMoreButtonDisabled(compareUsers(allUsers, followedUsers));\n    }\n  }, [allUsers, followedUsers, handleLoadMoreButtonDisabled, visibleUsers]);\n\n  return visibleUsers?.length > 0 ? (\n    <TweetsListStyled>\n      {visibleUsers.map(user => (\n        <TweetsListItem\n          user={user}\n          key={user.id}\n          following={isFollowing(user)}\n        />\n      ))}\n    </TweetsListStyled>\n  ) : (\n    <>\n      <div>No {filterSelector} users</div>\n      <ImageCatStyles\n        src={require('../../assets/images/NoDataCatImage/sad-cat-carnimee-transparent.png')}\n        alt=\"cat\"\n      />\n    </>\n  );\n};\n\nexport default TweetsList;\n","import React, { useState, useEffect } from 'react';\nimport { USERS_PER_PAGE } from 'services/constants';\nimport { useNavigate } from 'react-router-dom';\nimport Spinner from 'components/Spinner/Spinner';\nimport { useTweets } from 'hooks/useTweets';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport { purple } from '@mui/material/colors';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/joy/Button';\nimport { BreadcrumbsAndRadioButtonFilterContainer } from './Tweets.styled';\nimport { TweetsList } from 'components/TweetsList/TweetsList';\n\nconst Tweets = () => {\n  const [page, setPage] = useState(1);\n  const [visibleUsers, setVisibleUsers] = useState([]);\n  const [filterSelector, setFilterSelector] = useState('all');\n  const [loadMoreButtonDisabled, setLoadMoreButtonDisabled] = useState(false);\n\n  const navigate = useNavigate();\n\n  const { data, isError, isLoading, fetchStatus, status } = useTweets();\n\n  useEffect(() => {\n    if (status === 'success' && fetchStatus === 'idle') {\n      setVisibleUsers(data.slice(0, page * USERS_PER_PAGE));\n    }\n  }, [page, data, fetchStatus, status]);\n\n  const totalPages = () => Math.ceil(data.length / USERS_PER_PAGE);\n\n  const onLoadMoreButton = () => {\n    if (page >= totalPages()) {\n      return;\n    }\n\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const onBackButtonClick = () => {\n    navigate('/', { replace: true });\n  };\n\n  const handleFilterSelectorChange = event => {\n    setFilterSelector(event.target.value);\n  };\n\n  const handleLoadMoreButtonDisabled = visibleFilteredUsers => {\n    if (filterSelector === 'followed') {\n      setLoadMoreButtonDisabled(\n        visibleUsers.length >= visibleFilteredUsers.followed.length\n      );\n    } else if (filterSelector === 'not followed') {\n      setLoadMoreButtonDisabled(\n        visibleUsers.length >= visibleFilteredUsers.notFollowed.length\n      );\n    } else {\n      setLoadMoreButtonDisabled(visibleUsers.length >= data.length);\n    }\n  };\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <div>Error</div>;\n  }\n\n  return (\n    <>\n      <BreadcrumbsAndRadioButtonFilterContainer>\n        <Button\n          variant=\"outlined\"\n          onClick={onBackButtonClick}\n          sx={{\n            m: 1,\n            minWidth: 120,\n            color: purple[50],\n            borderColor: purple[200],\n            borderWidth: '1px',\n            borderRadius: '4px',\n            fontSize: '14px',\n            fontWeight: '400',\n            '&.Mui-focused': {\n              color: purple[800],\n            },\n            '&:hover': {\n              borderColor: purple[600],\n              borderWidth: '1px',\n              backgroundColor: purple[600],\n              color: purple[50],\n            },\n          }}\n        >\n          Go back\n        </Button>\n\n        <FormControl\n          sx={{\n            m: 1,\n            minWidth: 120,\n            color: purple[50],\n            '&.Mui-focused': {\n              color: purple[800],\n            },\n            borderColor: purple[200],\n            borderWidth: '1px',\n            borderRadius: '4px',\n            '&:hover > #filter-radio-button-label': {\n              color: purple[600],\n            },\n          }}\n        >\n          <InputLabel\n            id=\"filter-radio-button-label\"\n            sx={{\n              color: purple[200],\n              '&.Mui-focused': { color: purple[600] },\n              '&:hover': {\n                color: purple[600],\n              },\n            }}\n          >\n            Filter\n          </InputLabel>\n          <Select\n            labelId=\"filter-radio-button-label\"\n            id=\"filter-radio-button\"\n            value={filterSelector}\n            label=\"Filter\"\n            onChange={handleFilterSelectorChange}\n            sx={{\n              color: purple[50],\n              fontWeight: '400',\n              fontSize: '14px',\n              '.MuiOutlinedInput-notchedOutline': {\n                borderColor: purple[200],\n                borderWidth: '1px',\n              },\n              '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                borderColor: purple[600],\n                borderWidth: '1px',\n              },\n              '&:hover .MuiOutlinedInput-notchedOutline': {\n                borderColor: purple[600],\n                borderWidth: '1px',\n              },\n              '.MuiSvgIcon-root ': {\n                fill: 'white !important',\n              },\n            }}\n            autoWidth\n          >\n            <MenuItem value={'all'}>All</MenuItem>\n            <MenuItem value={'followed'}>Followed</MenuItem>\n            <MenuItem value={'not followed'}>Not followed</MenuItem>\n          </Select>\n        </FormControl>\n      </BreadcrumbsAndRadioButtonFilterContainer>\n\n      <TweetsList\n        allUsers={data}\n        visibleUsersProps={visibleUsers}\n        filterSelector={filterSelector}\n        handleLoadMoreButtonDisabled={handleLoadMoreButtonDisabled}\n      />\n\n      <Button\n        variant=\"outlined\"\n        disabled={loadMoreButtonDisabled}\n        onClick={onLoadMoreButton}\n        sx={{\n          m: 1,\n          minWidth: 120,\n          color: purple[50],\n          borderColor: purple[200],\n          borderWidth: '1px',\n          borderRadius: '4px',\n          fontSize: '14px',\n          fontWeight: '400',\n          '&.Mui-focused': {\n            color: purple[800],\n          },\n          '&:hover': {\n            borderColor: purple[600],\n            borderWidth: '1px',\n            backgroundColor: purple[600],\n            color: purple[50],\n          },\n        }}\n      >\n        Load more\n      </Button>\n    </>\n  );\n};\n\nexport default Tweets;\n","import { useQuery } from '@tanstack/react-query';\nimport { toast } from 'react-toastify';\nimport { getUsers } from 'services/api';\n\nexport function useTweets() {\n  return useQuery({\n    queryKey: ['users'],\n    queryFn: () => {\n      const res = toast.promise(getUsers, {\n        pending: 'Loading...',\n\n        success: 'Success',\n      });\n\n      return res;\n    },\n    staleTime: 1000 * 60 * 5,\n  });\n}\n","export const USERS_PER_PAGE = 3;\n\nexport const errorMessages = {\n  fetchUsers: 'Failed to fetch users.',\n  increaseFollowers: 'Failed to increase followers.',\n  decreaseFollowers: 'Failed to decrease followers.',\n};\n\nexport const createMessage = (action, successMessage, errorMessage) => {\n  const pending = `${action}...`;\n  const success = `${successMessage} successfully!`;\n  const error = errorMessage;\n  return { pending, success, error };\n};\n"],"names":["api","axios","baseURL","handleRequest","requestConfig","response","data","console","error","Error","message","updateUserFollowers","user","followersDelta","put","id","followers","getUsers","get","increaseFollowers","decreaseFollowers","BreadcrumbsAndRadioButtonFilterContainer","styled","getFollowingUsers","state","followedUsers","items","TweetsListStyled","ImageCatStyles","UserCard","AvatarWrapper","Avatar","CenterLine","UserInfoWrapper","UserInfoAndButtonContainer","BackImage","selected","loading","type","following","children","onClick","otherProps","Button","loadingPosition","variant","disabled","sx","backgroundColor","color","transition","minWidth","boxShadow","event","TweetsListItem","memo","dispatch","useDispatch","queryClient","useQueryClient","useMutation","follow","mutateAsync","isLoading","handleFollowAction","useCallback","addFollowingUser","deleteFollowingUser","invalidateQueries","handleFollowClick","handleUnfollowClick","buttonLabel","handleClick","src","require","alt","avatar","tweets","toLocaleString","TweetsList","allUsers","visibleUsersProps","filterSelector","handleLoadMoreButtonDisabled","useState","visibleUsers","setVisibleUsers","useSelector","isFollowing","some","item","useEffect","filteredUsers","filter","followUsers","followSet","Set","map","followed","notFollowed","has","push","compareUsers","length","page","setPage","setFilterSelector","loadMoreButtonDisabled","setLoadMoreButtonDisabled","navigate","useNavigate","useQuery","queryKey","queryFn","toast","pending","success","staleTime","isError","fetchStatus","status","slice","Spinner","replace","m","purple","borderColor","borderWidth","borderRadius","fontSize","fontWeight","FormControl","InputLabel","Select","labelId","value","label","onChange","target","fill","autoWidth","MenuItem","visibleFilteredUsers","Math","ceil","prevPage"],"sourceRoot":""}